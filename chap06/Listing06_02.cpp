#include <iostream>
#include <cstdlib>
using namespace std;
// Описание класса:
class MyClass{
public:
   // Символьное поле:
   char code;
   // Поле - указатель на объект:
   MyClass* next;
   // Деструктор:
   ~MyClass(){
      cout<<"Объект с полем "<<code<<" удален\n";
   }
   // Метод для отображения значения символьного поля:
   void show(){
      // Отображение значения поля:
      cout<<code<<" ";
      if(next){
         // Вызов метода для следующего объекта:
         next->show();
      }
   }
};
// Функция для удаления цепочки объектов:
void deleteAll(MyClass* q){
   // Проверка адреса в поле next:
   if(q->next){
      // Вызов функции для следующего объекта:
      deleteAll(q->next);
   }
   // Удаление текущего объекта:
   delete q;
}
// Главная функция программы:
int main(){
   // Изменение кодировки консоли:
   system("chcp 1251>nul");
   // Целочисленная переменная:
   int n=10;
   // Динамическое создание объекта:
   MyClass* pnt=new MyClass;
   // Доступ к полю объекта через указатель на него:
   pnt->code='A';
   // Указатель на объект:
   MyClass *p;
   // Начальное значение указателя:
   p=pnt;
   // Создание цепочки объектов:
   for(int k=1;k<=n;k++){
      // Создание очередного объекта:
      p->next=new MyClass;
      // Значение поля code для нового объекта:
      p->next->code=p->code+1;
      // Новое значение указателя - адрес
      // вновь созданного объекта:
      p=p->next;
   }
   // Нулевая ссылка в поле next для последнего
   // объекта в цепочке:
   p->next=0;
   // Вызов метода для первого объекта в цепочке:
   pnt->show();
   cout<<endl;
   // Удаление цепочки объектов:
   deleteAll(pnt);
   // Задержка консольного окна:
   system("pause>nul");
   return 0;
}